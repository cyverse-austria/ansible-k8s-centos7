---
- name: Get cluster certificate key
  shell: kubeadm init phase upload-certs --upload-certs
  register: certificate_key
  when: "'failed' in token_list_result.stderr"

- set_fact:
    certificate_key: '{{certificate_key.stdout_lines}}'

- name: Check current Kubernetes controler status
  command: kubeadm token list
  register: token_list_result
  ignore_errors: True

- name: join Kubernetes controler
  command: |
    kubeadm join 167.71.51.151:6443 --token {{hostvars[groups['k8s-control-plane'][0]].token[0]}} --discovery-token-ca-cert-hash sha256:{{hostvars[groups['k8s-control-plane'][0]].cert[0]}} --control-plane --certificate-key {{ certificate_key }}
  when: "'failed' in token_list_result.stderr"

- name: Waiting for configuration to become available
  wait_for:
    path: /etc/kubernetes/admin.conf
  when: "'failed' in token_list_result.stderr"

- name: Make .kube directory
  file:
    path: /root/.kube
    state: directory
    mode: 0700
    owner: root

- name: Copy Kubernetes config (root)
  copy:
    src: /etc/kubernetes/admin.conf
    dest: /root/.kube/config
    remote_src: yes
    owner: root
    group: root

#- name: Networking
#  include_tasks: "{{ kubernetes_default_networking }}.yml"

- name: Get cluster token
  shell: kubeadm token list | awk 'NR==2{print $1}'
  register: token_result

- set_fact:
    token: '{{token_result.stdout_lines}}'

- name: Get cluster ca-cert-hash
  shell: "openssl x509 -pubkey -in /etc/kubernetes/pki/ca.crt | openssl rsa -pubin -outform der 2>/dev/null | openssl dgst -sha256 -hex | sed 's/^.* //'"
  register: cert_result

- set_fact:
    cert: '{{cert_result.stdout_lines}}'
